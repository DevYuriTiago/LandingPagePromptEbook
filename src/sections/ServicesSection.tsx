import React from 'react';
import { ScrollReveal } from '../components/ScrollReveal';

const servicesList = [
  {
    icon: 'üèóÔ∏è',
    title: 'Estrutura Digital Completa',
    description: 'Sites, Sistemas e Plataformas para neg√≥cios modernos. Crie a base s√≥lida que seu neg√≥cio precisa para crescer com websites profissionais e sistemas sob medida.',
    features: [
      'Websites profissionais responsivos',
      'Sistemas internos personalizados',
      'Plataformas de vendas integradas',
      'Integra√ß√µes com ferramentas existentes'
    ]
  },
  {
    icon: 'ü§ñ',
    title: 'IA e Automa√ß√£o para Ganhar Escala',
    description: 'Automatize vendas, processos e atendimento com intelig√™ncia artificial. Chatbots, funis inteligentes e automa√ß√£o que trabalha por voc√™ 24/7.',
    features: [
      'IA para vendas e atendimento',
      'Chatbots inteligentes',
      'Automa√ß√µes de processos',
      'Intelig√™ncia comercial avan√ßada'
    ]
  },
  {
    icon: 'üìä',
    title: 'Otimiza√ß√£o de Vendas & Performance',
    description: 'Estrat√©gias de convers√£o, funis de vendas e otimiza√ß√£o de performance. Aumente suas vendas com dados e estrat√©gias baseadas em resultados.',
    features: [
      'Funis de vendas otimizados',
      'An√°lise de performance avan√ßada',
      'Estrat√©gias de convers√£o',
      'Testes A/B e otimiza√ß√£o'
    ]
  },
  {
    icon: 'üìà',
    title: 'Funis de Vendas & Jornada do Cliente',
    description: 'Construa sua m√°quina previs√≠vel de gera√ß√£o de clientes. Funis que levam da descoberta √† compra de forma autom√°tica, mensur√°vel e escal√°vel.',
    features: [
      'Estrutura√ß√£o de funis completos',
      'Automa√ß√£o de leads qualificados',
      'Remarketing inteligente',
      'Acompanhamento de performance'
    ]
  },
  {
    icon: 'üéØ',
    title: 'Consultoria e Estrat√©gia de Crescimento',
    description: 'Clareza, direcionamento e acompanhamento para seu crescimento. Consultoria cont√≠nua com an√°lises, diagn√≥sticos e planos personalizados.',
    features: [
      'Mentoria estrat√©gica cont√≠nua',
      'Diagn√≥sticos de neg√≥cio',
      'Estrat√©gia comercial personalizada',
      'Planejamento com IA'
    ]
  },
  {
    icon: '‚ö°',
    title: 'Conte√∫do Premium e Posicionamento',
    description: 'Impulsione sua marca com conte√∫dos que geram desejo e vendas. Conte√∫do inteligente para engajar, converter e posicionar como autoridade.',
    features: [
      'Conte√∫do estrat√©gico roteirizado',
      'V√≠deos e podcasts profissionais',
      'IA criativa para produ√ß√£o',
      'Posicionamento de autoridade'
    ]
  }
];

interface ServiceCardProps {
  service: typeof servicesList[0];
}

const ServiceCard: React.FC<ServiceCardProps> = ({ service }) => (
  <ScrollReveal animation="fadeInUp" delay={100}>
    <div className="service-card">
      <div className="service-icon aurora-text">{service.icon}</div>
      <h3 className="service-title animated-shiny-text">{service.title}</h3>
      <p className="service-description">{service.description}</p>
      <ul className="service-features">
        {service.features.map((feature, index) => (
          <li key={index}>{feature}</li>
        ))}
      </ul>
    </div>
  </ScrollReveal>
);

export const ServicesSection: React.FC = () => {
  return (
    <section className="section cinematic-section" id="services">
      <div className="section-connector"></div>
      <div className="container">
        <ScrollReveal animation="fadeInUp" delay={200}>
          <div className="section-header">
            <h2 className="section-title text-reveal">
              Como Aceleramos Pequenos Neg√≥cios e Microinfluenciadores
            </h2>
            <p className="section-subtitle hyper-text">
              Solu√ß√µes de IA, Automa√ß√£o e Marketing Digital personalizadas para transformar pequenos neg√≥cios em grandes estruturas
            </p>
          </div>
        </ScrollReveal>
        
        <ScrollReveal animation="fadeIn" delay={500}>
          <div className="marquee-container services-marquee">
            <div className="marquee-track pause-on-hover">
              {servicesList.map((service, index) => (
                <ServiceCard key={index} service={service} />
              ))}
            </div>
            
            {/* Segunda repeti√ß√£o do track para marquee infinito */}
            <div className="marquee-track pause-on-hover">
              {servicesList.map((service, index) => (
                <ServiceCard key={`duplicate-${index}`} service={service} />
              ))}
            </div>
          </div>
        </ScrollReveal>
      </div>
    </section>
  );
};
